#include <stdio.h>
#include <limits.h>

// Function to find the least recently used page
int findLRU(int time[], int n) {
    int min = time[0], pos = 0;
    for (int i = 1; i < n; i++) {
        if (time[i] < min) {
            min = time[i];
            pos = i;
        }
    }
    return pos;
}

void LRU(int pages[], int n, int frames) {
    int frame[frames], time[frames];
    int count = 0, page_faults = 0;
    int flag1, flag2, pos;

    // Initialize frames and time array
    for (int i = 0; i < frames; i++) {
        frame[i] = -1;
        time[i] = 0;
    }

    printf("Page Reference String | Frames\n");
    for (int i = 0; i < n; i++) {
        flag1 = flag2 = 0;

        // Check if the page is already in the frame
        for (int j = 0; j < frames; j++) {
            if (frame[j] == pages[i]) {
                flag1 = flag2 = 1;
                count++;
                time[j] = count; // Update time of usage
                break;
            }
        }

        // If the page is not in the frame
        if (flag1 == 0) {
            for (int j = 0; j < frames; j++) {
                if (frame[j] == -1) {
                    frame[j] = pages[i];
                    count++;
                    time[j] = count;
                    flag2 = 1;
                    page_faults++;
                    break;
                }
            }
        }

        // If no empty frame is available, replace the LRU page
        if (flag2 == 0) {
            pos = findLRU(time, frames);
            frame[pos] = pages[i];
            count++;
            time[pos] = count;
            page_faults++;
        }

        // Print the current state of the frames
        printf("%17d | ", pages[i]);
        for (int j = 0; j < frames; j++) {
            if (frame[j] != -1)
                printf("%d ", frame[j]);
            else
                printf("- ");
        }
        printf("\n");
    }

    printf("\nTotal Page Faults: %d\n", page_faults);
}

int main() {
    int n, frames;

    // Input the number of pages and the page reference string
    printf("Enter the number of pages: ");
    scanf("%d", &n);

    int pages[n];
    printf("Enter the page reference string: ");
    for (int i = 0; i < n; i++) {
        scanf("%d", &pages[i]);
    }

    // Input the number of frames
    printf("Enter the number of frames: ");
    scanf("%d", &frames);

    // Run the LRU algorithm
    LRU(pages, n, frames);

    return 0;
}
